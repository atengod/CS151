/*********************
//Name: Michael Olorode
//Creation: 12/04/17
//Version: Assignment 8
*********************/


/***********************************
//Name: ComboWithout()
//Parameter(s): nothing;
//Return: void
//Description: Displays all possible three letter arrangement such that order does not matter and arrangements cannot have
repeating letters with ten arrangements on each line separated by spaces.
// Label             Task                                            Goto
// 01                /print(Enter filename)/                          02
// 02                /cin = filename/                                03
// 03                [copy(filename)]                                04
// 04                (exit)
***************************************/
/****************************************
// Label             Task                                            Goto
// 01                [in = filename]                                 02
// 02                [out = stuff.txt]                               03
// 03                <getline(in,str) != eof()>                      04,06 
// 04                [out.print(str + "\n")]                          03
// 05                [out.close()]                                   06
// 06                [in.close()]                                    07
// 08                (exit)
***************************************/

#include <iostream>
using namespace std;

void ComboWithout();
void PrintCombo(char arr[], char data[], int start, int end, int index, int r);
void ComboWithout()
{
    char arr[] = {'A','B','C','D','E','F','G','H','I','J'};
    int r = 3;
    int n = sizeof(arr) / sizeof(arr[0]);
    int factorial , factorial1;
   
    for(int i = 1; i <= n; ++i)
    {
        factorial *= i;
    }
   
    for(int i = 1; i <= (n-r); ++i)
    {
        factorial1 *= i;
   }
  
    char data[factorial / factorial1];
 
    PrintCombo(arr, data, 0, n-1, 0, r);
}
 
void PrintCombo(char arr[], char data[], int start, int end,
                     int index, int r)
{
    if (index == r)
    {
        for (int j = 0; j < r; j++)
            cout << data[j];
            cout << endl;
        return;
    }
 
    for (int i = start; i <= end && end-i+1 >= r-index; i++)
    {
        data[index] = arr[i];
        PrintCombo(arr, data, i+1, end, index+1, r);
    }
}

int main() {
 ComboWithout();
}
